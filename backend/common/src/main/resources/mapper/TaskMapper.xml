<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scheduler.common.mapper.TaskMapper">
    
    <resultMap id="BaseResultMap" type="com.scheduler.common.model.Task">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="type" property="type"/>
        <result column="content" property="content"/>
        <result column="params" property="params"/>
        <result column="cron_expression" property="cronExpression"/>
        <result column="status" property="status"/>
        <result column="retry_count" property="retryCount"/>
        <result column="retry_interval" property="retryInterval"/>
        <result column="timeout" property="timeout"/>
        <result column="alert_type" property="alertType"/>
        <result column="alert_receiver" property="alertReceiver"/>
        <result column="alert_threshold" property="alertThreshold"/>
        <result column="del_flag" property="delFlag"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_by" property="createBy"/>
        <result column="update_by" property="updateBy"/>
        <result column="remark" property="remark"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        id, name, description, type, content, params, cron_expression, status,
        retry_count, retry_interval, timeout, alert_type, alert_receiver, alert_threshold,
        del_flag, create_time, update_time, create_by, update_by, remark
    </sql>
    
    <select id="selectById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from task
        where id = #{id} and del_flag = 0
    </select>
    
    <select id="selectList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from task
        <where>
            <if test="name != null and name != ''">
                and name like concat('%', #{name}, '%')
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            and del_flag = 0
        </where>
        order by create_time desc
    </select>
    
    <insert id="insert" parameterType="com.scheduler.common.model.Task" useGeneratedKeys="true" keyProperty="id">
        insert into task (
            name, description, type, content, params, cron_expression, status,
            retry_count, retry_interval, timeout, alert_type, alert_receiver, alert_threshold,
            create_by, update_by, remark
        ) values (
            #{name}, #{description}, #{type}, #{content}, #{params}, #{cronExpression}, #{status},
            #{retryCount}, #{retryInterval}, #{timeout}, #{alertType}, #{alertReceiver}, #{alertThreshold},
            #{createBy}, #{updateBy}, #{remark}
        )
    </insert>
    
    <update id="update" parameterType="com.scheduler.common.model.Task">
        update task
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="description != null">description = #{description},</if>
            <if test="type != null">type = #{type},</if>
            <if test="content != null">content = #{content},</if>
            <if test="params != null">params = #{params},</if>
            <if test="cronExpression != null">cron_expression = #{cronExpression},</if>
            <if test="status != null">status = #{status},</if>
            <if test="retryCount != null">retry_count = #{retryCount},</if>
            <if test="retryInterval != null">retry_interval = #{retryInterval},</if>
            <if test="timeout != null">timeout = #{timeout},</if>
            <if test="alertType != null">alert_type = #{alertType},</if>
            <if test="alertReceiver != null">alert_receiver = #{alertReceiver},</if>
            <if test="alertThreshold != null">alert_threshold = #{alertThreshold},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
        </set>
        where id = #{id} and del_flag = 0
    </update>
    
    <update id="deleteById">
        update task set del_flag = 1 where id = #{id}
    </update>
    
    <update id="updateStatus">
        update task set status = #{status} where id = #{id} and del_flag = 0
    </update>
    
    <select id="selectEnabledList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from task
        where status = 1 and del_flag = 0
    </select>
    
</mapper> 