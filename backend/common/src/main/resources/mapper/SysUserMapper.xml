<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scheduler.common.mapper.SysUserMapper">
    
    <resultMap id="BaseResultMap" type="com.scheduler.common.model.SysUser">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="sex" property="sex"/>
        <result column="avatar" property="avatar"/>
        <result column="status" property="status"/>
        <result column="del_flag" property="delFlag"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_by" property="createBy"/>
        <result column="update_by" property="updateBy"/>
        <result column="remark" property="remark"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        id, username, password, nickname, email, phone, sex, avatar, status, del_flag,
        create_time, update_time, create_by, update_by, remark
    </sql>
    
    <select id="selectByUsername" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where username = #{username} and del_flag = 0
    </select>
    
    <select id="selectById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where id = #{id} and del_flag = 0
    </select>
    
    <select id="selectList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        <where>
            <if test="username != null and username != ''">
                and username like concat('%', #{username}, '%')
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            and del_flag = 0
        </where>
        order by create_time desc
    </select>
    
    <insert id="insert" parameterType="com.scheduler.common.model.SysUser" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user (
            username, password, nickname, email, phone, sex, avatar, status,
            create_by, update_by, remark
        ) values (
            #{username}, #{password}, #{nickname}, #{email}, #{phone}, #{sex}, #{avatar}, #{status},
            #{createBy}, #{updateBy}, #{remark}
        )
    </insert>
    
    <update id="update" parameterType="com.scheduler.common.model.SysUser">
        update sys_user
        <set>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="status != null">status = #{status},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
        </set>
        where id = #{id} and del_flag = 0
    </update>
    
    <update id="deleteById">
        update sys_user set del_flag = 1 where id = #{id}
    </update>
    
    <update id="updatePassword">
        update sys_user set password = #{password} where id = #{id} and del_flag = 0
    </update>
    
</mapper> 